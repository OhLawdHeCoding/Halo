{"version":3,"sources":["Components/Itembuttons/IncItemButton.js","Components/Itembuttons/DecItemButton.js","Components/Itembuttons/PortionSizeButton.js","Components/Itembuttons/AddItemButton.js","Components/TotalEmissions.js","Components/DisplayCO2.js","Components/Emissions.js","Components/Chart.js","Components/Collapsible.js","Components/MobileBoxes.js","Components/GetWindowSize.js","Components/Databasebox.js","Components/SearchBar.js","Components/Popup.js","Components/Homepage.js","assets/logo.png","Components/Navbar.js","Components/DonateButton.js","assets/aForest.jpg","Components/About.js","Components/Donate.js","App.js","index.js"],"names":["IncItemButton","_portionItem","_item","items","setItems","className","onClick","console","log","val","id","Product","portion","name","itemsIndex","findIndex","item","portionIndex","portions","portionItem","oldAmount","amount","newAmount","grams","newItem","DecItemButton","Button","styled","button","PortionSizeButton","_portion","_val","push","AddItemButton","props","React","useState","custom","setCustom","type","placeholder","onChange","event","target","value","parseInt","PortionSize","filter","p","map","key","TotalEmissions","totalEmissions","reduce","parseFloat","MeanC02","replace","Math","round","Number","EPSILON","dispCO2","CO2","co2","style","color","Emissions","Data","dispChart","length","width","height","chartType","loader","data","rootProps","options","backgroundColor","legend","textStyle","CollapsibleEmissions","trigger","MobileBoxes","active","setActive","isMobile","setMobile","colspan","i","all","forEach","element","getWindowDimensions","window","innerWidth","innerHeight","Databasebox","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","SearchBar","searchTerm","setSearchTerm","toLowerCase","concat","Tags","includes","Popup","popup","setPopup","togglePopup","document","body","classList","add","remove","Homepage","JSONDATA","Navbar","menuToggle","setMenuToggle","closeMenu","to","alt","src","Logo","DonateButton","open","About","backgroundImage","Pic","fontSize","Donate","App","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f0d909b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction IncItemButton(_portionItem, _item, items, setItems) {\r\n  return (\r\n    <button className=\"IncButton\" onClick={() => setItems(() => {\r\n      console.log(\"Inc clicked...\");\r\n      console.log(\"ID: \" + _item.val.id);\r\n      console.log(\"Product: \" + _item.val.Product);\r\n      console.log(\"Portion: \" + _portionItem.portion.name);\r\n      var itemsIndex = items.findIndex(item => item.val.id === _item.val.id)\r\n      console.log(\"itemsIndex: \" + itemsIndex);\r\n\r\n      var portionIndex = items[itemsIndex].portions.findIndex(portionItem => portionItem.portion.name == _portionItem.portion.name);\r\n      if (portionIndex != -1) { //the function executes twice, bug?\r\n        console.log(\"portionIndex: \" + portionIndex);\r\n        console.log(items[itemsIndex].portions);\r\n        var oldAmount = items[itemsIndex].portions[portionIndex].amount; //items[{val, [{PortionSize, ->COUNT<-}]}]\r\n        console.log(\"Pre dec: \" + oldAmount);\r\n        var newAmount = oldAmount + _portionItem.portion.grams; //tror denna koden kör två ggr per klick. Konstigt dock att console loggarna inte gör det\r\n        var newItem = { portion: _portionItem.portion, amount: newAmount };\r\n        items[itemsIndex].portions[portionIndex] = newItem;\r\n        console.log(\"incremented to: \" + newAmount);\r\n        return [...items];\r\n\r\n      }\r\n\r\n    }\r\n    )}>+</button>\r\n  );\r\n}\r\n\r\nexport default IncItemButton;","import React from 'react'\r\n\r\nfunction DecItemButton(_portionItem, _item, items, setItems) {\r\n  return (/*\r\n        this decrament button sets the \"items\" array to a new value. It doesn't mutate \"items\", it sets it\r\n        to a new value so that react visually updates the content. This is why I return [...Items] in some\r\n        places. This creates a new array out of the destructed elements of the previous. It doesn't change\r\n        anything, it just creates a new identical array.\r\n\r\n        The \"items\" array is composed of [val, count] = [{Products, id, MeanCO2, tags[]}, count].\r\n        When val[0] is referenced, we access the actual product data {Products, id, MeanCO2, tags[]}, \r\n        when val[1] is referenced, we access the count of the item.\r\n        \r\n    <button className=\"decrament\" onClick={() => setItems(()=>{\r\n        \r\n        console.log(\"Decrement clicked...\");\r\n        console.log(\"ID: \"+val[0].id);\r\n        console.log(\"Product: \"+val[0].Product);\r\n        var index = items.findIndex(item => item[0].id === val[0].id)\r\n        if (index !== -1){\r\n            var amount = items[index][1];\r\n            console.log(\"index: \"+index);\r\n            if (amount === 1){\r\n                console.log(\"remove\");\r\n                return [...items[].splice(index, 1)];\r\n            }\r\n            else {\r\n                console.log(\"Pre dec: \"+amount);\r\n                items[index][1]-=1; //tror denna koden kör två ggr per klick. Konstigt dock att console loggarna inte gör det\r\n                console.log(\"decremented to: \"+items[index][1]);\r\n                return [...items];\r\n            }\r\n        } else return [...items];                       \r\n    }\r\n    )}> -1 </button>*/\r\n    <button className=\"DecButton\" onClick={() => setItems(() => {\r\n      console.log(\"Dec clicked...\");\r\n      console.log(\"ID: \" + _item.val.id);\r\n      console.log(\"Product: \" + _item.val.Product);\r\n      console.log(\"Portion: \" + _portionItem.portion.name);\r\n      var itemsIndex = items.findIndex(item => item.val.id === _item.val.id)\r\n      console.log(\"itemsIndex: \" + itemsIndex);\r\n\r\n      var portionIndex = items[itemsIndex].portions.findIndex(portionItem => portionItem.portion.name == _portionItem.portion.name);\r\n      if (portionIndex != -1) { //safe-guard mot att funktionen executar 2 ggr.\r\n        console.log(\"portionIndex: \" + portionIndex);\r\n        console.log(items[itemsIndex].portions);\r\n        var oldAmount = items[itemsIndex].portions[portionIndex].amount; //items[{val, [{PortionSize, ->COUNT<-}]}]\r\n        console.log(\"Pre dec: \" + oldAmount);\r\n        var newAmount = oldAmount - _portionItem.portion.grams; //tror denna koden kör två ggr per klick. Konstigt dock att console loggarna inte gör det\r\n        var newItem = { portion: _portionItem.portion, amount: newAmount };\r\n        items[itemsIndex].portions[portionIndex] = newItem;//jag decrementerar en kopia av itemet och ersätter den med det gamla.\r\n        console.log(\"decremented to: \" + newAmount);\r\n        return [...items];\r\n      }\r\n\r\n    }\r\n    )}>-</button>\r\n  );\r\n}\r\n\r\nexport default DecItemButton;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\nbackground-color: #fafafa;\r\npadding: 0px 5px;\r\nborder-radius: 3px;\r\nbox-shadow: 0px 2px 2px green;\r\ncursor: pointer;\r\nborder: none !important;\r\ntransition: ease background-color 250ms;\r\n&:hover {\r\n    background-color: #FFC107;\r\n}\r\n`;\r\n\r\nfunction PortionSizeButton(_portion, _val, items, setItems) {\r\n    return (\r\n        <Button className=\"addButton\" onClick={() => setItems(() => {\r\n            console.log(\"Add clicked...\");\r\n            console.log(\"ID: \" + _val.id);\r\n            console.log(\"Product: \" + _val.Product);\r\n            var itemsIndex = items.findIndex(item => item.val.id === _val.id)\r\n            console.log(\"index: \" + itemsIndex);\r\n            if (itemsIndex === -1) {//check if the item exists in the itembox, if not we should add it and the new portion\r\n                console.log(\"added\");\r\n                return [...items, { val: _val, portions: [{ portion: _portion, amount: _portion.grams }] }];\r\n            }\r\n            else {\r\n                var portionIndex = items[itemsIndex].portions.findIndex(portionItem => portionItem.portion.name == _portion.name);\r\n                if (portionIndex === -1) {\r\n                    console.log(items[itemsIndex].portions);\r\n                    items[itemsIndex].portions.push({ portion: _portion, amount: _portion.grams});\r\n                    return [...items];\r\n                }\r\n                else {\r\n                    console.log(items[itemsIndex].portions[portionIndex]);\r\n                    var oldAmount = items[itemsIndex].portions[portionIndex].amount; //items[{val, [{PortionSize, ->COUNT<-}]}]\r\n                    console.log(\"Pre inc: \" + oldAmount);\r\n                    var newAmount = oldAmount + _portion.grams; //tror denna koden kör två ggr per klick. Konstigt dock att console loggarna inte gör det\r\n                    var newItem = { portion: _portion, amount: newAmount };\r\n                    items[itemsIndex].portions[portionIndex] = newItem;\r\n                    console.log(\"incremented to: \" + newAmount);\r\n                    return [...items];\r\n                }\r\n            }\r\n        }\r\n        )}> {_portion.name + \" (\" + _portion.grams + \"g)\"} </Button>\r\n    );\r\n}\r\n\r\nexport default PortionSizeButton;","import React from 'react'\r\nimport PortionSizeButton from './PortionSizeButton'\r\n\r\n/* \r\nAddItemButton har två huvudsakliga uppgifter:\r\n1. Skapa en knapp för varje portion\r\n2. Skapa ett textfält för custom portioner, och skicka den till ovan punkt^\r\n*/\r\n\r\nfunction AddItemButton(props) {\r\n  //const custom = { name: \"\", grams: \"0\" };\r\n  const [custom, setCustom] = React.useState({ name: \"\", grams: \"0\" });\r\n  //För att hålla koll på vad som står i textfältet använder jag ett state^\r\n  //Defualt är en portion som inte har något namn och väger 0 gram\r\n  return (\r\n    <div>\r\n      <div className=\"customAddButton\">\r\n        <div className=\"customPortion\">\r\n          <input type=\"text\" placeholder=\"Custom (g)\" onChange={(event) => {\r\n            //skapar direkt en portion utav texten i textfältet och sparar med setCustom\r\n            var _portion = { name: event.target.value, grams: parseInt(event.target.value) }\r\n            setCustom(_portion);\r\n          }} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {[...props.val.PortionSize, custom].filter((p) => { if (p.name != \"\") return true; return false }).map((portion, key) => {\r\n          //jag filtrerar bort alla portioner som har ett defualt-namn.\r\n          //Itererar sen över allt som är kvar och returnerar tabellcell \"td\" med en knapp för varje (kallar PortionSizeButton)\r\n          return <div className=\"addButton\"><td className=\"buttonCell\" key={key}>{PortionSizeButton(portion, props.val, props.items, props.setItems)}</td></div>\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItemButton;","\r\n// A function that returns a number disclosing the total emissions of all the items in the users list\r\nfunction TotalEmissions(items) {\r\n\r\n    // Calculates the total emission\r\n    var totalEmissions = items.reduce((totalEmissions, item) => \r\n        parseFloat(item.val.MeanC02.replace(/,/g, \".\")) * \r\n        item.portions.reduce((portions, portion) => portion.amount/1000 + portions , 0)\r\n        + totalEmissions , 0);\r\n\r\n    // Rounds the number to two at max decimals and returns\r\n    return Math.round((totalEmissions + Number.EPSILON) * 100) / 100;\r\n\r\n}\r\n\r\nexport default TotalEmissions;\r\n","import React from 'react'\r\n\r\nfunction dispCO2(CO2) {\r\n    var co2 = parseInt(CO2);\r\n    if (co2>50)\r\n        return (\r\n            <div style={{color: \"red\"}}>\r\n                {CO2}\r\n            </div>\r\n        );\r\n    if (co2>10)\r\n        return (\r\n            <div style={{color: \"orange\"}}>\r\n                {CO2}\r\n            </div>\r\n        );\r\n    if (co2<=10)\r\n        return (\r\n            <div style={{color: \"green\"}}>\r\n                {CO2}\r\n            </div>\r\n        );\r\n    else {\r\n        return (\r\n            <div style={{color: \"red\"}}>\r\n                color not identified :( {CO2}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default dispCO2;","\r\n// A function that returns a number disclosing the total emissions of all the items in the users list\r\nfunction Emissions(items) {\r\n\r\n    var Data = [\r\n        ['food', 'CO2'],\r\n        ['',0]\r\n    ];\r\n    items.reduce((items,item) => \r\n        Data.push(\r\n            [item.val.Product, item.portions.reduce((portions,portion) => portion.amount/1000 + portions,0) * \r\n            item.val.MeanC02.replace(/,/g, \".\")]\r\n        )\r\n    ,0)\r\n    console.log(Data)\r\n    return Data;\r\n}\r\n\r\nexport default Emissions;\r\n\r\n","import Chart from \"react-google-charts\";\r\nimport Emissions from \"./Emissions\";\r\n\r\nfunction dispChart(items) {\r\n\r\n\r\n    if (items.length == 0) {\r\n        return (\": Add items to display chart\");\r\n    }\r\n\r\n\r\n    return (\r\n        <Chart\r\n            width={'100%'}\r\n            height={'300px'}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={Emissions(items)}\r\n            rootProps={{ 'data-testid': '1' }}\r\n            options={{\r\n                backgroundColor: \"#008553\",\r\n                legend:{\r\n                    textStyle: {\r\n                        color: \"white\"\r\n                    }\r\n                }\r\n            }}\r\n        />);\r\n\r\n}\r\n\r\nexport default dispChart;","import React, { useState } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\nimport TotalEmissions from './TotalEmissions';\r\nimport dispChart from './Chart';\r\nimport '../styling/Collapsable.css';\r\n\r\n\r\n\r\nfunction CollapsibleEmissions(items) {\r\n    const styles = {\r\n        width: \"500px\"\r\n    }\r\n    //const a = 1;\r\n    if (items.length == 0) {\r\n        return;\r\n    }\r\n    else {\r\n        return (\r\n            <Collapsible trigger={<div className=\"Collapsable\">{TotalEmissions(items) + \" Kg CO2 equivalent (click me!)\"}</div>}>\r\n                <p>\r\n                    {dispChart(items)}\r\n                </p>\r\n\r\n            </Collapsible>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CollapsibleEmissions;","import react from \"react\";\r\nimport IncItemButton from './Itembuttons/IncItemButton';\r\nimport DecItemButton from './Itembuttons/DecItemButton';\r\nimport AddItemButton from './Itembuttons/AddItemButton';\r\nimport React, { useState } from 'react';\r\nimport TotalEmissions from './TotalEmissions';\r\nimport dispCO2 from './DisplayCO2';\r\nimport \"../styling/MobileBox.css\";\r\nimport dispChart from './Chart';\r\nimport Emissions from './Emissions';\r\nimport CollapsibleEmissions from './Collapsible';\r\n\r\n\r\n/*\r\nThis file is currently called from databasebox (32)\r\nThis file is used as a substitute for Databasebox and is called when ismobile is true when the page reloads.\r\nWhen called, the file first shows the databasebox on the entire screen and then show itembox instead if a button is pressed.\r\n*/\r\nfunction MobileBoxes(items, setItems, data, active, setActive, isMobile, setMobile) {\r\n\r\n    //active is a const we get from Databasebox and swap when we press the \"TabButton\"\r\n    if (active) { //if active is true we display itembox, otherwise we display databasebox          \r\n        return (\r\n            <div>\r\n                <button className=\"TabButton\" onClick={() => //switches tabs\r\n                    setActive(!active)\r\n                }>switch tab\r\n                </button>\r\n                <div className=\"itemboxMobile\">\r\n                    <table className=\"itemboxTable\">\r\n                        <tr>\r\n                            <th colspan=\"2\"> {CollapsibleEmissions(items)}  </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>CO2 Emission (kg)</th>\r\n                        </tr>\r\n                        {items.filter((i) => {\r\n                            var all = false;\r\n                            i.portions.forEach(element => {\r\n                                all |= element.amount > 0;\r\n                            }); return all\r\n                        }).map((item, key) => {\r\n                            return <tr className=\"Product\" key={key}><td><div className=\"itemBoxProduct\">{item.val.Product}</div>\r\n                                <ul>{item.portions.filter(p => p.amount > 0).map((portionItem, key) => {\r\n                                    return <div className=\"portionItem\"><li key={key}>{portionItem.amount / portionItem.portion.grams}{\" x \" + portionItem.portion.name}\r\n                                    {IncItemButton(portionItem, item, items, setItems)}{DecItemButton(portionItem, item, items, setItems)}</li></div>\r\n                                })}</ul></td><td className=\"MeanCO2\" >{dispCO2(Math.round((parseFloat(item.val.MeanC02.replace(/,/g, \".\")) * item.portions.reduce((portions, portion) => portion.amount / 1000 + portions, 0) + Number.EPSILON) * 100) / 100)}</td></tr>\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div>\r\n                <button className=\"TabButton\" onClick={() => //switches tabs\r\n                    setActive(!active)\r\n                }>switch tab\r\n                </button>\r\n\r\n                <div className=\"databaseboxMobile\">\r\n\r\n                    <table>\r\n\r\n                        <tr className>\r\n                            <th>Product</th>\r\n                            <th>CO2 (kg/kg)</th>\r\n                        </tr>\r\n\r\n                        {data.map((val, key) => {\r\n                            return <tr className=\"Product\" key={key}><td><div className=\"product\">{val.Product}</div><AddItemButton val={val} items={items} setItems={setItems} />\r\n                            </td><td>{dispCO2(val.MeanC02)}</td></tr>\r\n\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default MobileBoxes;","import { useState, useEffect } from 'react';\r\n\r\n//Copied from stackoverflow.\r\n//used to get screenwidth in databasebox to determine whether to call the phone or desktop version\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n","import IncItemButton from './Itembuttons/IncItemButton';\r\nimport DecItemButton from './Itembuttons/DecItemButton';\r\nimport AddItemButton from './Itembuttons/AddItemButton';\r\nimport React, { useState } from 'react';\r\nimport TotalEmissions from './TotalEmissions';\r\nimport dispCO2 from './DisplayCO2';\r\nimport \"../styling/Databasebox.css\";\r\nimport dispChart from './Chart';\r\nimport Emissions from './Emissions';\r\nimport MobileBoxes from './MobileBoxes';\r\nimport useWindowDimensions from './GetWindowSize.js';\r\nimport CollapsibleEmissions from './Collapsible';\r\n\r\n\r\nfunction Databasebox({ data }) {\r\n    const [items, setItems] = React.useState([]);\r\n    const [active, setActive] = useState(false); //Used in MobileBoxes.js if active is true we display itembox, otherwise we display databasebox \r\n    const { height, width } = useWindowDimensions(); //used to determine width to see if user is on mobile or not. Full hook can be found in GetWindowSize.js\r\n    const [isMobile, setMobile] = useState(width < 1001); //if width< 1001 we switch to mobile version\r\n\r\n    /*items:[\r\n        {val:val, portions:[{portion, amount}]}\r\n    ]//val is product: {Pruduct, MeanC02, id, PortionSize}\r\n    //portion: {name, grams}\r\n    */\r\n\r\n\r\n    if (isMobile) {\r\n\r\n        return (\r\n\r\n            MobileBoxes(items, setItems, data, active, setActive, isMobile, setMobile)\r\n        )\r\n    } else {\r\n        return (\r\n\r\n            /*\r\n            the <table> tag marks the start of the table. \r\n            <tr> marks the start of a row\r\n            <th> marks the start of a header cell. \"Products\" and \"Mean KGCO2 equivalent\" in our case\r\n            <td> indicates cell data. \r\n            -In our table a map function maps over all products given to us in \r\n             this components function call and returns them within rows of cell datas.  \r\n            */\r\n\r\n\r\n            <div className=\"boxes\">\r\n                <div>\r\n                    <div className=\"itembox\">\r\n                        <table className=\"itemboxTable\">\r\n                            <tr>\r\n                                <th colspan=\"2\"> {CollapsibleEmissions(items)}  </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Product</th>\r\n                                <th>CO2 Emission (kg)</th>\r\n                            </tr>\r\n                            {items.filter((i) => {\r\n                                var all = false;\r\n                                i.portions.forEach(element => {\r\n                                    all |= element.amount > 0;\r\n                                }); return all\r\n                            }).map((item, key) => {\r\n                                return <tr className=\"Product\" key={key}><td><div className=\"itemBoxProduct\">{item.val.Product}</div>\r\n                                    <ul>{item.portions.filter(p => p.amount > 0).map((portionItem, key) => {\r\n                                        return <div className=\"portionItem\"><li key={key}>{portionItem.amount / portionItem.portion.grams}{\" x \" + portionItem.portion.name}\r\n                                        {IncItemButton(portionItem, item, items, setItems)}{DecItemButton(portionItem, item, items, setItems)}</li></div>\r\n                                    })}</ul></td><td className=\"MeanCO2\" >{dispCO2(Math.round((parseFloat(item.val.MeanC02.replace(/,/g, \".\")) * item.portions.reduce((portions, portion) => portion.amount / 1000 + portions, 0) + Number.EPSILON) * 100) / 100)}</td></tr>\r\n                            })}\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"databasebox\">\r\n\r\n                        <table>\r\n                            <tr>\r\n                                <th>Product</th>\r\n                                <th>CO2 (kg/kg)</th>\r\n                            </tr>\r\n                            {data.map((val, key) => {\r\n                                return <tr className=\"Product\" key={key}><td><div className=\"product\">{val.Product}</div><AddItemButton val={val} items={items} setItems={setItems} />\r\n                                </td><td>{dispCO2(val.MeanC02)}</td></tr>\r\n                            })}\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Databasebox;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport Databasebox from './Databasebox';\r\n\r\nfunction SearchBar({ placeholder, data }) {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    return (\r\n        <div className=\"search\">          \r\n            <div className=\"container\"> \r\n                <input type=\"text\" placeholder={placeholder} onChange={(event) => {\r\n                            setSearchTerm(event.target.value);  \r\n                        }} />\r\n                <div className=\"searchIcon\"> </div>\r\n\r\n            </div> \r\n            <div className=\"data\"><Databasebox data={data.filter((val)=>{//Databasebox takes the filtered data and displays it in a table\r\n                            if (searchTerm == \"\"){\r\n                                return val\r\n                            } else if (val.Product.toLowerCase().concat(val.Tags).includes(searchTerm.toLowerCase()))\r\n                                return val\r\n                            })\r\n                        }\r\n                    />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n    \r\n      \r\n}\r\n\r\nexport default SearchBar\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"../styling/Popup.css\";\r\n\r\n//this file is responsible for the popup help button located in Homepage.js\r\n\r\nexport default function Popup() {\r\n  const [popup, setPopup] = useState(false);//state of popup is false from beginning\r\n\r\n  const togglePopup = () => {\r\n    setPopup(!popup);//toggles useState Hook when button is clicked\r\n  };\r\n\r\n  if(popup) {\r\n    document.body.classList.add('active-popup')//prevent scrolling when popup is open\r\n  } else {\r\n    document.body.classList.remove('active-popup')\r\n  }\r\n\r\n  /*\r\n\r\n  Clicking the help/close button or the overlay (outside the popup-window)\r\n  triggers the function togglePopup and changes useState.\r\n\r\n  'popup &&' is used to render the popup conditionally.\r\n  If popup is true, the popup is returned. If not true, nothing is returned. \r\n\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <button onClick={togglePopup} className=\"btn-popup\">\r\n        Help  \r\n      </button>\r\n\r\n      {popup && (\r\n        <div className=\"popup\">\r\n          <div onClick={togglePopup} className=\"overlay\"></div>\r\n          <div className=\"popup-content\">\r\n            <h2>Welcome!</h2>\r\n            <p>\r\n              <p>To use the CO2 calculator: </p>\r\n              \r\n              Either scroll in the product list or search \r\n              for the item/items you want in the searchbox and click on it. The search function\r\n              is smart so you could for instance search \"Salmon\" and find the \"Farmed fish\"-category.\r\n              If you want several of the same item, click on it as many time as you would like. \r\n\r\n              <p>\r\n              On the right hand side of the list you \r\n              can see your chosen items. To remove an item/decrease the amount of an item, \r\n              press -1. Similarly, to add more of an item, press +1. \r\n              \r\n              <p>Finally, above your list of selected items you can see the total CO2\r\n                -equivalent in kg and if you press it, its breakdown in a graph.</p>\r\n\r\n              </p>\r\n              \r\n             \r\n              \r\n            </p>\r\n            <button className=\"close-popup\" onClick={togglePopup}>\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n    </>\r\n  );\r\n}","import JSONDATA from \"../Data.json\";\r\nimport SearchBar from \"../Components/SearchBar\";\r\nimport Popup from \"../Components/Popup\";\r\n\r\n/* \r\n\r\nThis file is responsible for the homepage of the website\r\nand is located in App.js\r\n\r\nThe SearchBar component and help button (Popup) is a part of the homepage.\r\nThe databasebox is located in SearchBar, which is why its also displayed\r\nin the hompage.  \r\n\r\n*/\r\nfunction Homepage() {\r\n  return (\r\n    <div className=\"homepagecontent\">\r\n      <SearchBar placeholder=\"Search...\" data={JSONDATA} />\r\n      <Popup />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/logo.90bfe703.png\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/logo.png\";\r\nimport \"../styling/Navbar.css\";\r\n\r\n/* \r\nThe navigation bar appears at the top of the screen on all pages. \r\nIt contains a clickable logotype to the left and links to the three different\r\npages to the right. It uses 'React router dom' to navigate the different pages. \r\nThe output is different for screens with width > 960 px where the links appear \r\nby clicking a hamburger menu-icon (for mobile). A popup-menu then appears.\r\nIt gets called by App.js.\r\nIt returns the Navbar. \r\n*/\r\nfunction Navbar() {\r\n  //Variable with hook used to change design between desktop and mobile.\r\n  //setMenuToggle is changed when using variables showMenu and closeMenu.\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n  //function that sets menuToggle to true. Is called when clicking on the\r\n  //hamburger menu-icon\r\n  const showMenu = () => setMenuToggle(!menuToggle);\r\n\r\n  //function that sets menuToggle to false and closes the menu.\r\n  //It's called when clicking on a page link in the pop-up navigation drawer.\r\n  const closeMenu = () => setMenuToggle(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"nav-div\">\r\n        <div className=\"nav-container\">\r\n          <Link to=\"/\" className=\"c02-logo\" onClick={closeMenu}>\r\n            <img alt=\"Co2-logotype\" src={Logo} />\r\n          </Link>\r\n          <div className=\"menu-logo\" onClick={showMenu}>\r\n            {/*Checks menuToggle and provide different icon the depending on value*/}\r\n            <i className={menuToggle ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </div>\r\n          {/*Checks menuToggle and adds css-styling depending on value*/}\r\n          <ul className={menuToggle ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMenu}>\r\n                <div className=\"navbarText\">Home</div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-links\" onClick={closeMenu}>\r\n              <div className=\"navbarText\">About</div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/donate\" className=\"nav-links\" onClick={closeMenu}>\r\n              <div className=\"navbarText\">Donate</div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\n\r\n//this file is responsible for the donate button located in Donate.js\r\n\r\n//CSS for the button component\r\nconst Button = styled.button`\r\nbackground-color: #FFC107;\r\npadding: 15px 30px;\r\nborder-radius: 5px;\r\nbox-shadow: 0px 2px 2px lightgray;\r\ncursor: pointer;\r\nfont-weight: bold;\r\ntransition: ease background-color 250ms;\r\n&:hover {\r\n    background-color: #283593;\r\n}\r\n`;\r\n\r\n\r\nfunction DonateButton() {\r\n  //function that reacts to the click of the button. Opens a new window with the website www.wfp.org\r\n    const handleClick = () => { \r\n        window.open(\"http://wfp.org\");\r\n      };\r\n\r\n      return (\r\n        <Button onClick={handleClick}>Donate</Button>\r\n\r\n      );\r\n    \r\n\r\n}\r\n\r\nexport default DonateButton;\r\n\r\n\r\n ","export default __webpack_public_path__ + \"static/media/aForest.3d728b19.jpg\";","import React from \"react\";\r\nimport Pic from \"../assets/aForest.jpg\";\r\nimport \"../styling/About.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n//this file is responsible for the about page located in App.js\r\nfunction About() {\r\n  return (\r\n    <div className=\"about\">\r\n      <div\r\n        className=\"aboutTop\"\r\n        style={{ backgroundImage: `url(${Pic})` }}\r\n      ></div>\r\n      <div className=\"aboutBottom\">\r\n        <h1> About us </h1>\r\n        <p>\r\n          We are students at Chalmers University Of Technology in Gothenburg and\r\n          we want to raise awareness on how production and processing of food\r\n          impact the climate. We have therefore created a Co2-calculator where\r\n          you can search through our database for differents foods and find\r\n          their carbon footprint. You can create your own list of items with the\r\n          groceries you plan to use when cooking or while shopping. We believe\r\n          that with further knowledge about what we're eating and how\r\n          environmentally friendly different products are we can drastically\r\n          reduce our footprint only with small changes in our consumption.{\" \"}\r\n          <br />\r\n          <br /> The data that we use is collected from 38,700 farms and 1600\r\n          processors. It takes also into account the packaging and retailers and\r\n          the data is then presented as the average gas emission of carbon\r\n          dioxide equivalents (kgCO₂eq) per kilogram of food.\r\n          <br />\r\n          <br /> With the development of transport systems and a more industrial\r\n          supply structure in recent centuries the link between producers and\r\n          consumers has become ever more distant. While helping society in so\r\n          many ways, our more comfortable lifestyle has created a gap with a\r\n          lack of knowledge that we believe is problematic for our future battle\r\n          for better climate.\r\n          <br />\r\n          <br />\r\n          <p style={{fontSize: '80%'}}>\r\n          <small>\r\n          Data: Poore, J. and Nemecek, T. (2018). Reducing food’s environmental impacts through producers and consumers. \r\n           Science, [online] 360(6392), pp.987–992. <td onClick={() => \r\n            window.open('https://science.sciencemag.org/content/360/6392/987')}>\r\n              https://science.sciencemag.org/content/360/6392/987\r\n            </td>\r\n          </small>\r\n          </p>\r\n          <br />\r\n         \r\n        </p>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Pic from \"../assets/aForest.jpg\";\r\nimport DonateButton from \"../Components/DonateButton\";\r\nimport \"../styling/Donate.css\";\r\n\r\n//this file is responsible for the donate page located in App.js\r\nfunction Donate() {\r\n  return (\r\n    <div className=\"donate\">\r\n      <div\r\n        className=\"donateTop\"\r\n        style={{ backgroundImage: `url(${Pic})` }}\r\n      ></div>\r\n      <div className=\"donateBottom\">\r\n        <h1>Donate</h1>\r\n        <p>\r\n          One in ten people around the world do not have enough to eat everyday.\r\n          \"Zero Hunger\" is one of the UN's 17 Sustainable Devlopment Goals that\r\n          includes a mission aiming at ending all forms of malnutrition by 2030.\r\n          After decades of decline, the number of people suffering from hunger\r\n          began to slowly increase again in 2015. This needs to change!{\" \"}\r\n          <br></br>\r\n          <br></br> The World Food Programme is the largest humanitarian\r\n          organization in the world and provides life-saving food and nutrition\r\n          assistance to people living in poor conditions and in countries\r\n          affected by conflict. There are currently over 810 million people that\r\n          do not have enough food and according to recent estimates, 41 million\r\n          people are at risk of sliding into famine. In 2021 their mission is\r\n          more important than ever and hugely challenging with increasing\r\n          climate change, inequality and problematic socio-economic consequenses\r\n          of the Covid-19 pandemic.<br></br>\r\n          <br></br>You can become a monthly donator or do a one-time donation.\r\n          Click the button below to find out more.<br></br>\r\n        </p>\r\n        <p style={{ fontSize: \"80%\" }}>\r\n          <small>\r\n            The UN World Food Programme is a 100% voluntarily funded\r\n            organization. For every $1 you give, 64 cents goes directly to\r\n            programmes supporting hungry people. Right now, 2 cents is used to\r\n            process your donation and 6 cents helps run WFP and their programmes.\r\n            28 cents goes towards raising the next $1 (which under their ten-year\r\n            plan will fall – averaging out at 22 cents between 2020-2030).\r\n          </small>\r\n          <br />\r\n          <br />\r\n        </p>\r\n        <DonateButton />\r\n        <p>\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Donate;\r\n","\r\nimport './App.css';\r\nimport JSONDATA from './Data.json';\r\nimport Homepage from './Components/Homepage';\r\nimport Navbar from './Components/Navbar';\r\nimport { useState } from 'react';\r\nimport SearchBar from './Components/SearchBar';\r\nimport DonateButton from './Components/DonateButton';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport About from './Components/About';\r\nimport Donate from './Components/Donate';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/Halo' exact component={Homepage}/>\r\n        <Route path='/' exact component={Homepage}/>\r\n        <Route path='/about' exact component={About}/>\r\n        <Route path='/donate' exact component={Donate}/>\r\n        <Route path='/home' exact component={Homepage}/>\r\n      </Switch>\r\n      </Router>\r\n\r\n      \r\n      \r\n\r\n    \r\n     \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}